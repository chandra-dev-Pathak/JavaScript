## OOP is a way to write code by modeling real-world “things” as objects that bundle their data (properties) and behavior (methods) together.

## In plain words:-
Think of an object as a little package: it holds values (like color, speed) and functions that act on those values (like drive() or stop()). OOP helps you organize code so related data and behavior stay together — making programs easier to understand, change, and reuse.

## Why we use OOP

- Organize code — groups related data + functions so files/classes are clearer.
- Reusability — you can reuse objects or extend them (later: inheritance).
- Encapsulation — hide internal details and expose a simple interface (useful for avoiding bugs).
- Model real life — easier to map concepts like User, Car, Cart into code.
- Maintainability — easier to find where to change behavior (methods are on objects).
- Polishing for teams/interviews — shows clean design and thinking about structure.

## Real-world analogy

A car object:-
- Properties: color, speed, fuel
- Methods: drive(), brake(), refuel()
- That maps directly to code — you talk about what a car has and what a car can do.

## Short interview answer:-

Short: “OOP is a way to structure programs around objects that contain data and the functions that act on that data.”

If they ask why: “It improves organization, reusability, and models real-world things, which makes code easier to read and maintain.”

